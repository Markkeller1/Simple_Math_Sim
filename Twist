#include <ros/ros.h>
#include <std_msgs/String.h>
#include <geometry_msgs/Twist.h>


ros::Subscriber sub_Resultat;

void ResultatCallback(const std_msgs::String::ConstPtr& msg)
{
  ROS_INFO("I heard2: [%s]", msg->data.c_str());
}

int main(int argc, char **argv)
{
  ros::init(argc, argv, "padde2");
  ros::NodeHandle n;
  sub_Resultat = n.subscribe("Resultat", 1000, ResultatCallback);

  ros::Publisher cmd_vel_pub = n.advertise<geometry_msgs::Twist>("turtle1/cmd_vel", 1);
  
  geometry_msgs::Twist cmd_vel_message;
  cmd_vel_message.angular.z = 0.0;
  cmd_vel_message.angular.x = .0;

  ros::Rate loop_rate(10);

  while (ros::ok())
  {
    cmd_vel_pub.publish(cmd_vel_message);
    loop_rate.sleep();
  }

  ros::spin();

  return 0;
}
